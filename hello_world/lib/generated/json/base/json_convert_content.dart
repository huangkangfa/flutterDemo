// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:hello_world/model/model_item_product_entity.dart';
import 'package:hello_world/generated/json/model_item_product_entity_helper.dart';
import 'package:hello_world/model/model_item_icon_entity.dart';
import 'package:hello_world/generated/json/model_item_icon_entity_helper.dart';
import 'package:hello_world/model/model_item_activity_entity.dart';
import 'package:hello_world/generated/json/model_item_activity_entity_helper.dart';
import 'package:hello_world/model/model_banner_list_entity.dart';
import 'package:hello_world/generated/json/model_banner_list_entity_helper.dart';
import 'package:hello_world/model/model_refresh_list_entity.dart';
import 'package:hello_world/generated/json/model_refresh_list_entity_helper.dart';
import 'package:hello_world/model/model_user_entity.dart';
import 'package:hello_world/generated/json/model_user_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case ModelItemProductEntity:
			return modelItemProductEntityFromJson(data as ModelItemProductEntity, json) as T;			case ModelItemIconEntity:
			return modelItemIconEntityFromJson(data as ModelItemIconEntity, json) as T;			case ModelItemActivityEntity:
			return modelItemActivityEntityFromJson(data as ModelItemActivityEntity, json) as T;			case ModelBannerListEntity:
			return modelBannerListEntityFromJson(data as ModelBannerListEntity, json) as T;			case ModelBannerListData:
			return modelBannerListDataFromJson(data as ModelBannerListData, json) as T;			case ModelRefreshListEntity:
			return modelRefreshListEntityFromJson(data as ModelRefreshListEntity, json) as T;			case ModelUserEntity:
			return modelUserEntityFromJson(data as ModelUserEntity, json) as T;    }
    return data as T;
  }  static _getToJson<T>(Type type, data) {
		switch (type) {			case ModelItemProductEntity:
			return modelItemProductEntityToJson(data as ModelItemProductEntity);			case ModelItemIconEntity:
			return modelItemIconEntityToJson(data as ModelItemIconEntity);			case ModelItemActivityEntity:
			return modelItemActivityEntityToJson(data as ModelItemActivityEntity);			case ModelBannerListEntity:
			return modelBannerListEntityToJson(data as ModelBannerListEntity);			case ModelBannerListData:
			return modelBannerListDataToJson(data as ModelBannerListData);			case ModelRefreshListEntity:
			return modelRefreshListEntityToJson(data as ModelRefreshListEntity);			case ModelUserEntity:
			return modelUserEntityToJson(data as ModelUserEntity);    }
    return data as T;
  }  static T fromJsonAsT<T>(json) {
    switch (T.toString()) {			case 'ModelItemProductEntity':
			return ModelItemProductEntity().fromJson(json) as T;			case 'ModelItemIconEntity':
			return ModelItemIconEntity().fromJson(json) as T;			case 'ModelItemActivityEntity':
			return ModelItemActivityEntity().fromJson(json) as T;			case 'ModelBannerListEntity':
			return ModelBannerListEntity().fromJson(json) as T;			case 'ModelBannerListData':
			return ModelBannerListData().fromJson(json) as T;			case 'ModelRefreshListEntity':
			return ModelRefreshListEntity().fromJson(json) as T;			case 'ModelUserEntity':
			return ModelUserEntity().fromJson(json) as T;    }
    return null;
  }}